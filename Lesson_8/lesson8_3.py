# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список
# только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами
# выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.

class MyOwnError(Exception):
    def __init__(self, txt):
        self.txt = txt


def int_func(word):
    num = '1234567890'
    return word.title() if not set(word).difference(num) else False


my_list = []
while True:
    in_list = input('Введите числа через пробел, для окончания введите q: ').split()
    for my in in_list:
        if my != 'q':
            try:
                result = int_func(my)
                if result:
                    my_n = int(my)
                else:
                    raise MyOwnError('Присутствуют символы отличные от цифр')
            except (Exception, MyOwnError) as err:
                print(err)
            else:
                my_list.append(my_n)
        else:
            break
    if my == 'q':
        break

print(my_list)
